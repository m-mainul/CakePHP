<?php
App::uses('AppController', 'Controller');

class DashboardController extends AppController {

	public function index() {
		$_SESSION["MenuActive"] = 5;
		$this -> loadModel('GeoCodeDivn');
		$this -> loadModel('GeoCodeZila');
		$this -> loadModel('GeoCodeUpazila');
		$this -> loadModel('GeoCodeRmo');
		$this -> loadModel('GeoCodePsa');
		$this -> loadModel('GeoCodeUnion');

		$this -> loadModel('Book');
		$this -> loadModel('Questionaire');
		$this -> loadModel('QuesCheck');
		$this -> loadModel('QuesSixCheck');

		//RESET OLD VALUE
		$old_geo_code_divn_id = "";
		$old_geo_code_zila_id = "";
		$old_geo_code_upazila_id = "";
		$old_geo_code_psa_id = "";
		$old_geo_code_union_id = "";
		$old_geo_code_mauza_id = "";
		$old_geo_code_village_id = "";
		$old_book_id = "";
		//END OF RESET OLD VALUE

		$condition_common = array();
		if ($this -> request -> is('post')) {
			
			//pr($this -> request -> data); exit;

			//SET OLD VALUE
			$old_geo_code_divn_id = $this -> request -> data['Dashboard']['geo_code_divn_id'];
			$old_geo_code_zila_id = $this -> request -> data['Dashboard']['geo_code_zila_id'];
			$old_geo_code_upazila_id = $this -> request -> data['Dashboard']['geo_code_upazila_id'];
			$old_geo_code_psa_id = $this -> request -> data['Dashboard']['geo_code_psa_id'];
			$old_geo_code_union_id = $this -> request -> data['Dashboard']['geo_code_union_id'];
			$old_geo_code_mauza_id = $this -> request -> data['Dashboard']['geo_code_mauza_id'];
			$old_geo_code_village_id = $this -> request -> data['Dashboard']['geo_code_village_id'];
			$old_book_id = $this -> request -> data['Dashboard']['book_id'];
			//END OF SET OLD VALUE

			if ($this -> request -> data['Dashboard']['geo_code_divn_id'] != '')
				$condition_common['conditions'][] = array('Book.geo_code_divn_id' => $this -> request -> data['Dashboard']['geo_code_divn_id']);

			if ($this -> request -> data['Dashboard']['geo_code_zila_id'] != '')
				$condition_common['conditions'][] = array('Book.geo_code_zila_id' => $this -> request -> data['Dashboard']['geo_code_zila_id']);

			if ($this -> request -> data['Dashboard']['geo_code_upazila_id'] != '')
				$condition_common['conditions'][] = array('Book.geo_code_upazila_id' => $this -> request -> data['Dashboard']['geo_code_upazila_id']);

			if ($this -> request -> data['Dashboard']['geo_code_psa_id'] != '')
				$condition_common['conditions'][] = array('Book.geo_code_psa_id' => $this -> request -> data['Dashboard']['geo_code_psa_id']);

			if ($this -> request -> data['Dashboard']['geo_code_union_id'] != '')
				$condition_common['conditions'][] = array('Book.geo_code_union_id' => $this -> request -> data['Dashboard']['geo_code_union_id']);

			if ($this -> request -> data['Dashboard']['geo_code_mauza_id'] != '')
				$condition_common['conditions'][] = array('Questionaire.q1_geo_code_mauza_id' => $this -> request -> data['Dashboard']['geo_code_mauza_id']);

			if ($this -> request -> data['Dashboard']['geo_code_village_id'] != '')
				$condition_common['conditions'][] = array('Questionaire.q2_village_maholla' => $this -> request -> data['Dashboard']['geo_code_village_id']);

			if ($this -> request -> data['Dashboard']['book_id'] != '')
				$condition_common['conditions'][] = array('Questionaire.book_id' => $this -> request -> data['Dashboard']['book_id']);

		}

		//OPERATOR================================================================
		if (in_array(2, $this -> Session -> read('Authake.group_ids'))) {
			$condition_common['conditions'][] = array('Questionaire.entry_by' => $this -> Session -> read('Authake.id'));
		}
		//END OF OPERATOR======================================================

		//SUPERVISOR============================================================
		if (in_array(3, $this -> Session -> read('Authake.group_ids'))) {
			$geo_code_zila_id = $this -> GeoCodeZila -> getZilaID_dashboard($this -> supervisor_zila);
			$geo_code_upazila_id = $this -> GeoCodeUpazila -> getUpazilaID($this -> supervisor_upazila, $geo_code_zila_id);

			$condition_common['conditions'][] = array('Book.geo_code_zila_id' => $geo_code_zila_id);
			$condition_common['conditions'][] = array('Book.geo_code_upazila_id' => $geo_code_upazila_id);
		}
		//END OF SUPERVISOR=====================================================

		//SUPERVISING OFFICER===================================================
		if (in_array(4, $this -> Session -> read('Authake.group_ids'))) {
			$geo_code_zila_id = $this -> GeoCodeZila -> getZilaID_dashboard($this -> supervisor_zila);

			$condition_common['conditions'][] = array('Book.geo_code_zila_id' => $geo_code_zila_id);
		}
		//END OF SUPERVISING OFFICER===========================================

		//DINV COO=============================================================
		if (in_array(5, $this -> Session -> read('Authake.group_ids'))) {
			$geo_code_divn_id = $this -> GeoCodeDivn -> getDivnID($this -> divn_coo);
			$condition_common['conditions'][] = array('Book.geo_code_divn_id' => $geo_code_divn_id);
		}
		//END OF DINV COO=======================================================

		//1. FIELDS FOR Number of DEO worked=====================================
		$condition_deo = $condition_common;
		//$fields_deo = array('DISTINCT Questionaire.entry_by');
		$fields_deo = array('COUNT(DISTINCT Questionaire.entry_by) AS count');
		$condition_deo['fields'] = $fields_deo;
		$totalDeoWork = $this -> Questionaire -> find('count', $condition_deo);
		//$totalDeoWork = count($totalDeoWork);
		//END FIELDS FOR Number of DEO worked=====================================

		//2. FIELDS FOR Number of Books Entered===================================
		$condition_num_of_books = $condition_common;
		//$fields_num_of_books = array('DISTINCT Book.entry_by');
		//$fields_num_of_books = array('DISTINCT Book.id');
		$fields_num_of_books = array('COUNT(DISTINCT Book.id) AS count');
		$condition_num_of_books['fields'] = $fields_num_of_books;
		$totalBookEntered = $this -> Questionaire -> find('count', $condition_num_of_books);
		//$totalBookEntered = count($totalBookEntered);
		//$totalBookEntered = count($totalBookEntered);
		//END FIELDS FOR Number of Books Entered================================

		//3. FIELDS FOR Parmanent Establishment=================================
		$condition_Parmanent_Establishment = $condition_common;
		$condition_Parmanent_Establishment['conditions'][] = array('Questionaire.q4_unit_type' => '2', 'Questionaire.q4_unit_org_type' => '1');
		$fields_Parmanent_Establishment = array('Questionaire.q4_unit_org_type');
		$condition_Parmanent_Establishment['fields'] = $fields_Parmanent_Establishment;
		$totalParmanentEstablishment = $this -> Questionaire -> find('count', $condition_Parmanent_Establishment);
		
		//$totalParmanentEstablishment = count($totalParmanentEstablishment);
		//END FIELDS FOR Parmanent Establishment================================

		//4. FIELDS FOR Temporary Establishment=============================
		$condition_Temporary_Establishment = $condition_common;
		$condition_Temporary_Establishment['conditions'][] = array('Questionaire.q4_unit_type' => '2', 'Questionaire.q4_unit_org_type' => '2');
		$fields_Temporary_Establishment = array('Questionaire.q4_unit_org_type');
		$condition_Temporary_Establishment['fields'] = $fields_Temporary_Establishment;
		$totalTemporaryEstablishment = $this -> Questionaire -> find('count', $condition_Temporary_Establishment);
		
		//$totalTemporaryEstablishment = count($totalTemporaryEstablishment);
		//END FIELDS FOR Temporary Establishment===========================

		//5. FIELDS FOR Economic Household========================================
		$condition_Economic_Household = $condition_common;
		$condition_Economic_Household['conditions'][] = array('Questionaire.q4_unit_type' => '2', 'Questionaire.q4_unit_type' => '1');
		$fields_Economic_Household = array('Questionaire.q4_unit_type');
		$condition_Economic_Household['fields'] = $fields_Economic_Household;
		$totalEconomicHousehold = $this -> Questionaire -> find('count', $condition_Economic_Household);
		//$totalEconomicHousehold = count($totalEconomicHousehold);
		//END FIELDS FOR Economic Household=========================================

		//6. FIELDS FOR Agricultural Establishments====================================
		$condition_Agricultural_Establishments = $condition_common;
		$condition_Agricultural_Establishments['conditions'][] = array('Questionaire.q4_unit_type' => '2', 'Questionaire.q5_unit_head_economy_id' => '01');
		$fields_Agricultural_Establishments = array('Questionaire.q5_unit_head_economy_id');
		$condition_Agricultural_Establishments['fields'] = $fields_Agricultural_Establishments;
		$totalAgriculturalEstablishments = $this -> Questionaire -> find('count', $condition_Agricultural_Establishments);
		//$totalAgriculturalEstablishments = count($totalAgriculturalEstablishments);
		//END FIELDS FOR Agricultural Establishments==================================
		
		$condition_total_qus = $condition_common;
		
		$fields_total_qus = array('Questionaire.id');
		$condition_total_qus['fields'] = $fields_total_qus;
		$totalUnit = $this -> Questionaire -> find('count', $condition_total_qus);
		

		$divns = $this -> GeoCodeDivn -> find('list');
		$rmos = $this -> GeoCodeRmo -> find('list');

		//$totalUnit = $totalParmanentEstablishment + $totalTemporaryEstablishment + $totalEconomicHousehold;

		$this -> set(compact('divns', 'rmos', 'totalDeoWork', 'totalBookEntered', 'totalParmanentEstablishment', 'totalTemporaryEstablishment', 'totalEconomicHousehold', 'totalAgriculturalEstablishments', 'totalUnit', 'old_geo_code_divn_id', 'old_geo_code_zila_id', 'old_geo_code_upazila_id', 'old_geo_code_psa_id', 'old_geo_code_union_id', 'old_geo_code_mauza_id', 'old_geo_code_village_id', 'old_book_id'));
	}

	public function sup_dashboard()
	{
		$_SESSION["MenuActive"] = 5;
		$this -> loadModel('GeoCodeDivn');
		$this -> loadModel('GeoCodeZila');
		$this -> loadModel('GeoCodeUpazila');
		$this -> loadModel('GeoCodeRmo');
		$this -> loadModel('GeoCodePsa');
		$this -> loadModel('GeoCodeUnion');

		$this -> loadModel('Book');
		$this -> loadModel('Questionaire');
		$this -> loadModel('QuesCheck');
		$this -> loadModel('QuesSixCheck');
		
		//SUPERVISOR============================================================
		if (in_array(3, $this -> Session -> read('Authake.group_ids'))) {
			$geo_code_zila_id = $this -> GeoCodeZila -> getZilaID_dashboard($this -> supervisor_zila);
			$geo_code_upazila_id = $this -> GeoCodeUpazila -> getUpazilaID($this -> supervisor_upazila, $geo_code_zila_id);

			$condition_common['conditions'][] = array('Book.geo_code_zila_id' => $geo_code_zila_id);
			$condition_common['conditions'][] = array('Book.geo_code_upazila_id' => $geo_code_upazila_id);
		}
		//END OF SUPERVISOR=====================================================

//TOTAL UNIT=====================================================================		
		$condition_total = $condition_common;
		$condition_total['fields'] = array('Questionaire.id');
		$total_unit = $this -> Questionaire -> find('count', $condition_total);
		//$total_unit = count($Questionaires);
		//echo "<br />Total Unit = ".$total_unit;


//ALL QUES VERIFIED BY SUPERVISOR
		$condition_all_qus = $condition_common;
		$condition_all_qus['conditions'][] = array('QuesCheck.entry_by' => $this -> Session -> read('Authake.id'));
		$condition_all_qus['fields'] = array('Questionaire.id');
		$all_ques_verified_by_supervisor = $this -> Questionaire -> find('count', $condition_all_qus);
		//$all_ques_verified_by_supervisor = count($Questionaires1);
		//echo "<br />ALL QUES VERIFIED BY SUPERVISOR = ".$all_ques_verified_by_supervisor;

		
//QUES 6 VERIFIED BY SUPERVISOR		
		$condition_q6 = $condition_common;
		$condition_q6['conditions'][] = array('QuesSixCheck.entry_by' => $this -> Session -> read('Authake.id'));
		$condition_q6['fields'] = array('Questionaire.id');
		$q6_verified_by_supervisor = $this -> Questionaire -> find('count', $condition_q6);
		//$q6_verified_by_supervisor = count($Questionaires2);
		//echo "<br />ALL QUES VERIFIED BY SUPERVISOR = ".$q6_verified_by_supervisor;
		
		
//QUES 6 WRONG	
		$condition_q6_wrong = $condition_common;
		$condition_q6_wrong['conditions'][] = array('QuesSixCheck.entry_by' => $this -> Session -> read('Authake.id'), 'QuesSixCheck.is_right' => 0);
		$condition_q6_wrong['fields'] = array('Questionaire.id');
		$q6_wrong = $this -> Questionaire -> find('count', $condition_q6_wrong);
		//$q6_wrong = count($Questionaires3);
		
		//echo "<br />QUES 6 WRONG	 = ".$q6_wrong;

//QUES 6 RIGHT	
		$condition_q6_right = $condition_common;
		$condition_q6_right['conditions'][] = array('QuesSixCheck.entry_by' => $this -> Session -> read('Authake.id'), 'QuesSixCheck.is_right' => 0, 'QuesSixCheck.update_by' => $this -> Session -> read('Authake.id'));
		$condition_q6_right['fields'] = array('Questionaire.id');
		$q6_right = $this -> Questionaire -> find('count', $condition_q6_right);
		//$q6_right = count($Questionaires4);
		//echo "<br />QUES 6 RIGHT	 = ".$q6_right;
		
//QUES 6 APPROVED	
		$condition_q6_approved = $condition_common;
		$condition_q6_approved['conditions'][] = array('QuesSixCheck.entry_by' => $this -> Session -> read('Authake.id'), 'QuesSixCheck.approve_status' => "APPROVE");
		$condition_q6_approved['fields'] = array('Questionaire.id');
		$q6_approved = $this -> Questionaire -> find('count', $condition_q6_approved);
		//$q6_approved = count($Questionaires5);
		//echo "<br />QUES 6 APPROVED	 = ".$q6_approved;
		
		$this -> set(compact('total_unit', 'all_ques_verified_by_supervisor', 'q6_verified_by_supervisor', 'q6_wrong', 'q6_right', 'q6_approved'));
		
	
	}

	public function so_dashboard()
	{
		
		$_SESSION["MenuActive"] = 5;
		$this->loadModel('AuthakeUserGroup');
		$this -> loadModel('Questionaire');
		$this -> loadModel('GeoCodeZila');
		$this -> loadModel('GeoCodeUpazila');
		
		$so_zila = $this -> sup_officer_zila;
		
		$dashboard_data = array();
		
		$users = $this->AuthakeUserGroup->find('all', array('conditions' => array('AuthakeUserGroup.group_id' => 3, 'AuthakeUser.login LIKE' => $so_zila."%"), 'fields' => array('AuthakeUser.login', 'AuthakeUser.id')));
		
		
		
		
		$counter = 0;
		foreach ($users as $key => $user) {
			
			$exp = explode("_", $user['AuthakeUser']['login']);

			$zila = substr($exp[0], 0, 2);
			$upazila = substr($exp[1], 0, 2);
			
			$geo_code_zila_id = $this -> GeoCodeZila -> getZilaID_dashboard($zila);
			$geo_code_upazila_id = $this -> GeoCodeUpazila -> getUpazilaID($upazila, $geo_code_zila_id);
			
			//RESET ARRAY----------------------------------------
			$condition_common = array();
			$condition_total = array();
			$condition_all_qus = array();
			$condition_q6 = array();
			$condition_q6_wrong = array();
			$condition_q6_right = array();
			$condition_q6_approved = array();
			
			//RESET ARRAY----------------------------------------
			
			
			$condition_common['conditions'][] = array('Book.geo_code_zila_id' => $geo_code_zila_id);
			$condition_common['conditions'][] = array('Book.geo_code_upazila_id' => $geo_code_upazila_id);
			
			
			
	//TOTAL UNIT==================================================================
			
			$condition_total = $condition_common;
			$condition_total['fields'] = array('Questionaire.id');
			$total_unit = $this -> Questionaire -> find('count', $condition_total);
			//$total_unit = count($Questionaires);
			//echo "<br />Total Unit = ".$total_unit;
			
			if($total_unit == 0) continue;
	
	
	//ALL QUES VERIFIED BY SUPERVISOR
		
			$condition_all_qus = $condition_common;
			$condition_all_qus['conditions'][] = array('QuesCheck.entry_by' => $user['AuthakeUser']['id']);
			$condition_all_qus['fields'] = array('Questionaire.id');
			$all_ques_verified_by_supervisor = $this -> Questionaire -> find('count', $condition_all_qus);
			//$all_ques_verified_by_supervisor = count($Questionaires1);
			
			//echo "<br />ALL QUES VERIFIED BY SUPERVISOR = ".$all_ques_verified_by_supervisor;
	
			
	//QUES 6 VERIFIED BY SUPERVISOR		
			
			$condition_q6 = $condition_common;
			$condition_q6['conditions'][] = array('QuesSixCheck.entry_by' => $user['AuthakeUser']['id']);
			$condition_q6['fields'] = array('Questionaire.id');
			$q6_verified_by_supervisor = $this -> Questionaire -> find('count', $condition_q6);
			//$q6_verified_by_supervisor = count($Questionaires2);
			
			//echo "<br />ALL QUES VERIFIED BY SUPERVISOR = ".$q6_verified_by_supervisor;
			
			
	//QUES 6 WRONG	
			
			$condition_q6_wrong = $condition_common;
			$condition_q6_wrong['conditions'][] = array('QuesSixCheck.entry_by' => $user['AuthakeUser']['id'], 'QuesSixCheck.is_right' => 0);
			$condition_q6_wrong['fields'] = array('Questionaire.id');
			$q6_wrong = $this -> Questionaire -> find('count', $condition_q6_wrong);
			//$q6_wrong = count($Questionaires3);
			
			
			//echo "<br />QUES 6 WRONG	 = ".$q6_wrong;
	
	//QUES 6 RIGHT	
			
			$condition_q6_right = $condition_common;
			$condition_q6_right['conditions'][] = array('QuesSixCheck.entry_by' => $user['AuthakeUser']['id'], 'QuesSixCheck.is_right' => 0, 'QuesSixCheck.update_by' => $user['AuthakeUser']['id']);
			$condition_q6_right['fields'] = array('Questionaire.id');
			$q6_right = $this -> Questionaire -> find('count', $condition_q6_right);
			//$q6_right = count($Questionaires4);
			
			//echo "<br />QUES 6 RIGHT	 = ".$q6_right;
			
	//QUES 6 APPROVED	
			
			$condition_q6_approved = $condition_common;
			$condition_q6_approved['conditions'][] = array('QuesSixCheck.entry_by' => $user['AuthakeUser']['id'], 'QuesSixCheck.approve_status' => "APPROVE");
			$condition_q6_approved['fields'] = array('Questionaire.id');
			$q6_approved = $this -> Questionaire -> find('count', $condition_q6_approved);
			//$q6_approved = count($Questionaires5);
			
			
			
			$dashboard_data[$counter]['supervisor_name'] = $user['AuthakeUser']['login'];
			$dashboard_data[$counter]['total_unit'] = $total_unit;
			$dashboard_data[$counter]['all_ques_verified_by_supervisor'] = $all_ques_verified_by_supervisor;
			$dashboard_data[$counter]['q6_verified_by_supervisor'] = $q6_verified_by_supervisor;
			$dashboard_data[$counter]['q6_wrong'] = $q6_wrong;
			$dashboard_data[$counter]['q6_right'] = $q6_right;
			$dashboard_data[$counter]['q6_approved'] = $q6_approved;
			
			$counter++;
			
		}
		
		//pr($dashboard_data);
		
		$this -> set(compact('dashboard_data'));
		
	}






}
?>
